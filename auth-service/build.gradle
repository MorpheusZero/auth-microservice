buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:propdeps-plugin:0.0.9.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

group = 'net.snowlynxsoftware'
version = '1.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
	// Keep jar clean:
	exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
	baseName = 'net.snowlynxsoftware.auth-service'
	version =  '1.0.1'
	manifest {
		attributes 'Main-Class': 'net.snowlynxsoftware.authservice.AuthServiceApplication'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')

	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Use MySQL Connector-J
	compile 'mysql:mysql-connector-java'

	// JWT
	compile 'io.jsonwebtoken:jjwt:0.9.0'

	// SendGrid
	compile 'com.sendgrid:sendgrid-java:4.1.2'

	// Config processor
	optional "org.springframework.boot:spring-boot-configuration-processor"

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileJava.dependsOn(processResources)
